version: "3"

services:
  client:
    image: nginx:latest
    ports:
      - "80:80"
    build:
      context: /frontend
      dockerfile: Dockerfile

    volumes:
      - ./frontend:/usr/share/nginx/html

  kinoserver:
    image: kinobackend
    build:
      context: /backend
      dockerfile: Dockerfile
    environment:
      - spring.datasource.url=jdbc:mysql://MovieDB:3306/kino?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true&autoReconnect=true
      - spring.datasource.username=${DB_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
      - spring.datasource.platform=mysql
      - spring.datasource.initialization-mode=always
      - spring.jpa.properties.hibernate.jdbc.time_zone=UTC
      - spring.jpa.show-sql=true
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.jpa.hibernate.ddl-auto=create-drop

    ports:
      - "8080:8080"
    networks:
      - kino-net
    depends_on:
      - MovieDB

  MovieDB:
    image: mysql:8
    ports:
      - "3307:3306"
    networks:
      - kino-net
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}

networks:
  kino-net:
